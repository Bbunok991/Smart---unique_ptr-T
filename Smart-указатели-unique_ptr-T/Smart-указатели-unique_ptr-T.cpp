// Smart-указатели-unique_ptr-T.cpp : Этот файл содержит функцию "main". Здесь начинается и заканчивается выполнение программы.
//

#include <iostream>
#include <memory>
using namespace std;

int main()
{
    /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

    // указатель ptr указывает на объект 125
    //unique_ptr<int> ptr{ make_unique<int>(125) };
    //cout << "Address: " << ptr.get() << endl;   // получим адрес объекта
    //cout << "Initial value: " << *ptr << endl;     // получим значение объекта

    // изменяем значение
    //*ptr = 254;
    //cout << "New value: " << *ptr << endl;     // получим значение объекта

    /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

    //unsigned n{ 5 };   // размер массива
    //auto pnumbers{ make_unique<int[]>(n) };    // массив {0, 0, 0, 0, 0}

    //cout << "pnumbers[1] initial value: " << pnumbers[1] << endl; // pnumbers[1] initial value: 0
    //pnumbers[1] = 121;  // изменяем значение
    //cout << "pnumbers[1] new value: " << pnumbers[1] << endl;     // pnumbers[1] new value: 121

    /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

    //unsigned n{ 5 };   // размер массива
    //auto pnumbers{ make_unique<int[]>(n) };    // массив из n элементов

    // изменим и выведем все элементы на консоль
    //for (unsigned i{}; i < n; i++)
    //{
    //    pnumbers[i] = i + 1;
    //    cout << "pnumbers[" << i << "] = " << pnumbers[i] << endl;
    //}

    /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

    //auto ptr{ make_unique<int>(123) };

    // освобождаем память и удаляем объект 123
    //ptr.reset();
    //if (!ptr)   // если ptr
    //{
    //    cout << "Memory is free" << endl;
    //}
    //else
    //{
    //    cout << *ptr << endl;
    //}

    /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

    //auto ptr { make_unique<int>(123) };

    //cout << "Old address: " << ptr.get() << endl;
    //cout << "Old value: " << *ptr << endl;
    //// освобождаем память и удаляем массив
    //ptr.reset(new int{ 254 });

    //cout << "New address: " << ptr.get() << endl;
    //cout << "New value: " << *ptr << endl;

    /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



    /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
}

